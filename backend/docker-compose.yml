services:
  # сервис БД
  postgres:
    image: dockerhub.timeweb.cloud/library/postgres:latest
    container_name: postgres
    ports:
      - 55432:5432
    restart: always
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USERNAME=postgres
    networks: 
      - local
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # сервис для применения миграций в базе
  migrate:
    image: dockerhub.timeweb.cloud/migrate/migrate:latest
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - local 
    volumes:
      - ./migrations/:/migrations
    command: ["-path", "./migrations/", "-database", "postgres://${PGUSER}:${PGPASSWORD}@postgres:5432/${PGDB}?sslmode=disable", "up"]
    environment:
      - PGUSER=postgres
      - PGPASSWORD=postgres
      - PGDB=postgres

  # сервис аккаунтов
  users:
    build:
      context: ./users
    container_name: users
    depends_on:
      - migrate
    restart: always
    networks:
      - local
    volumes:
      - ./users/config.yml:/config.yml
    environment:
      - CONFIG_PATH=/config.yml
    ports:
      - 8085:8080

  nginx:
    image: nginx:latest
    ports:
      - 8090:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - users
    networks:
      - local

  schedules:
    build:
      context: ./schedules
    container_name: schedules
    depends_on:
      - migrate
    restart: always
    networks:
      - local
    volumes:
      - ./schedules/config.yml:/config.yml
    environment:
      - CONFIG_PATH=/config.yml
    ports:
      - 7010:8080

  # files:
  #   build:
  #     context: ./files
  #   container_name: files
  #   depends_on:
  #     - migrate
  #     - minio
  #   restart: always
  #   networks:
  #     - local
  #     - minioNetwork
  #   volumes:
  #     - ./users/config.yml:/config.yml
  #   environment:
  #     - CONFIG_PATH=/config.yml
  #   ports:
  #     - 8085:8080

  # minio:
  #   container_name: minio
  #   image: 'bitnami/minio:latest'
  #   volumes:
  #     - 'minio_data:/data'
  #   ports:
  #     - "9000:9000"
  #   restart: unless-stopped
  #   environment:
  #     MINIO_ROOT_USER: "admin"
  #     MINIO_ROOT_PASSWORD: "admin"
  #     MINIO_USE_SSL: "false"
  #     MINIO_DEFAULT_BUCKETS: "uploads"
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
  #     interval: 30s
  #     timeout: 20s
  #     retries: 5
  #   networks:
  #     - minioNetwork

networks:
  local:
    driver: bridge
  minioNetwork:
    driver: bridge
